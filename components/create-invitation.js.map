{"version":3,"file":"create-invitation.js","sourceRoot":"","sources":["../../src/components/create-invitation.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html } from 'lit';\nimport { requestContext } from '@holochain-open-dev/context';\nimport { state, query } from 'lit/decorators.js';\nimport { ScopedRegistryHost } from '@lit-labs/scoped-registry-mixin';\nimport { MobxLitElement } from '@adobe/lit-mobx';\n\n/**mwc-elements imports */\nimport { Card } from 'scoped-material-components/mwc-card';\nimport { List } from 'scoped-material-components/mwc-list';\nimport { Icon } from '@material/mwc-icon';\nimport { Button } from 'scoped-material-components/mwc-button';\nimport { ListItem } from '@material/mwc-list/mwc-list-item';\n\nimport {\n  Dictionary,\n  ProfilePrompt,\n  SearchAgent,\n} from '@holochain-open-dev/profiles';\n\nimport { InvitationsStore } from '../invitations.store';\n\nimport { INVITATIONS_STORE_CONTEXT } from '../types';\nimport { AgentPubKeyB64 } from '@holochain-open-dev/core-types';\nimport { sharedStyles } from '../shared-styles';\n\n/**\n * @element create-invitation-form\n */\nexport class CreateInvitation extends ScopedRegistryHost(MobxLitElement) {\n  @requestContext(INVITATIONS_STORE_CONTEXT)\n  _store!: InvitationsStore;\n\n  @state()\n  invitees: Dictionary<string> = {};\n\n  _addInvitee(e: CustomEvent) {\n    this.invitees[e.detail.agent.agent_pub_key] =\n      e.detail.agent.profile.nickname;\n    this.requestUpdate();\n  }\n\n  _removeInvitee(e: Event) {\n    const node: any = e.target;\n    delete this.invitees[node.id];\n    this.requestUpdate();\n  }\n\n  async _sendInvitation() {\n    //this is the input for the create invitation method define in the holochain side\n    const invitees_list: AgentPubKeyB64[] = [];\n\n    Object.entries(this.invitees).map(element => {\n      invitees_list.push(element[0]);\n      delete this.invitees[element[0]];\n    });\n\n    if (invitees_list.length > 0) {\n      await this._store.sendInvitation(invitees_list);\n      await this._store.fetchMyPendingInvitations();\n      this.requestUpdate();\n    }\n  }\n  async _pedignInvitations() {\n    await this._store.fetchMyPendingInvitations();\n  }\n  renderInviteesList() {\n    const invitees = Object.entries(this.invitees);\n\n    return html`\n      <mwc-list>\n        ${invitees.map(element => {\n          const invitee_nickname = element[1];\n\n          return html` <mwc-list-item hasMeta>\n            <span>${invitee_nickname}</span>\n            <mwc-icon\n              slot=\"meta\"\n              id=\"${element[0]}\"\n              @click=\"${this._removeInvitee}\"\n              >close</mwc-icon\n            >\n          </mwc-list-item>`;\n        })}\n      </mwc-list>\n    `;\n  }\n  render() {\n    return html`\n      <mwc-card style=\"flex: 1;\">\n        <div class=\"column\" style=\"margin: 16px; flex: 1;\">\n          <span class=\"title\" style=\"margin-bottom: 16px;\"\n            >Create Invitation</span\n          >\n          <search-agent\n            @agent-selected=\"${this._addInvitee}\"\n            clear-on-select\n            include-myself\n            style=\"margin-bottom: 16px;\"\n          ></search-agent>\n\n          <div\n            class=\"flex-scrollable-parent\"\n            style=\"flex: 1; margin-bottom: 16px;\"\n          >\n            <div class=\"flex-scrollable-container\">\n              <div class=\"flex-scrollable-y\">${this.renderInviteesList()}</div>\n            </div>\n          </div>\n\n          <mwc-button label=\"Send Invitation\" @click=${this._sendInvitation}>\n            <mwc-icon slot=\"icon\">send</mwc-icon>\n          </mwc-button>\n        </div>\n      </mwc-card>\n    `;\n  }\n\n  static elementDefinitions = {\n    'search-agent': SearchAgent,\n    'profile-prompt': ProfilePrompt,\n    'mwc-icon': Icon,\n    'mwc-list': List,\n    'mwc-card': Card,\n    'mwc-list-item': ListItem,\n    'mwc-button': Button,\n  };\n\n  static get styles() {\n    return [\n      sharedStyles,\n      css`\n        :host {\n          display: flex;\n        }\n      `,\n    ];\n  }\n}\n\n// import { MobxReactionUpdate } from '@adobe/lit-mobx';\n// import {\n//   BaseElement,\n//   connectDeps,\n//   DepsElement,\n// } from '@holochain-open-dev/common';\n// import {\n//   CreateProfileForm,\n//   Dictionary,\n//   ProfilePrompt,\n//   SearchAgent,\n// } from '@holochain-open-dev/profiles';\n// import { html, css, property } from 'lit-element';\n// import { InvitationsStore } from '../invitations.store';\n// import { InvitationItem } from './invitation-item';\n\n// import { Card } from 'scoped-material-components/mwc-card';\n// import { List } from 'scoped-material-components/mwc-list';\n// import { Icon } from '@material/mwc-icon';\n// import { Button } from 'scoped-material-components/mwc-button';\n// import { ListItem } from '@material/mwc-list/mwc-list-item';\n// import { CircularProgress } from 'scoped-material-components/mwc-circular-progress';\n\n// import { sharedStyles } from '../shared-styles';\n// import { AgentPubKey } from '../types';\n\n// export abstract class CreateInvitation\n//   extends MobxReactionUpdate(BaseElement)\n//   implements DepsElement<InvitationsStore>\n// {\n//   abstract get _deps(): InvitationsStore;\n\n//   static styles = [sharedStyles];\n\n//   @property({ type: Array })\n//   invitees: Dictionary<String> = {};\n\n//   _addInvitee(e: CustomEvent) {\n//     // console.log(e.detail.agent.profile.nickname);\n\n//     this.invitees[e.detail.agent.agent_pub_key] =\n//       e.detail.agent.profile.nickname;\n//     this.requestUpdate();\n//   }\n\n//   _removeInvitee(e: Event) {\n//     let node: any = e.target;\n//     delete this.invitees[node.id];\n//     this.requestUpdate();\n//   }\n\n//   async _sendInvitation() {\n//     //this is the input for the create invitation method define in the holochain side\n//     let invitees_list: AgentPubKey[] = [];\n\n//     Object.entries(this.invitees).map(element => {\n//       invitees_list.push(element[0]);\n\n//       delete this.invitees[element[0]];\n//     });\n\n//     if(invitees_list.length > 0 ){\n//       await this._deps.sendInvitation(invitees_list);\n//       await this._deps.fetchMyPendingInvitations();\n//       this.requestUpdate();\n//     }\n\n//   }\n\n//   async _pedignInvitations() {\n//     await this._deps.fetchMyPendingInvitations();\n//   }\n\n//   renderInviteesList() {\n//     return html`\n//       <mwc-list>\n//         ${Object.entries(this.invitees).map(element => {\n//           return html` <mwc-list-item hasMeta>\n//             <span>${element[1]}</span>\n//             <mwc-icon\n//               slot=\"meta\"\n//               id=\"${element[0]}\"\n//               @click=\"${this._removeInvitee}\"\n//               >close</mwc-icon\n//             >\n//           </mwc-list-item>`;\n//         })}\n//       </mwc-list>\n//     `;\n//   }\n\n//   render() {\n//     return html`\n//       <mwc-card style=\"flex: 1;\">\n//         <div class=\"column\" style=\"margin: 16px; flex: 1;\">\n//           <span class=\"title\" style=\"margin-bottom: 16px;\"\n//             >Create Invitation</span\n//           >\n//           <search-agent\n//             @agent-selected=\"${this._addInvitee}\"\n//             clear-on-select\n//             style=\"margin-bottom: 16px;\"\n//           ></search-agent>\n\n//           <div\n//             class=\"flex-scrollable-parent\"\n//             style=\"flex: 1; margin-bottom: 16px;\"\n//           >\n//             <div class=\"flex-scrollable-container\">\n//               <div class=\"flex-scrollable-y\">${this.renderInviteesList()}</div>\n//             </div>\n//           </div>\n\n//           <mwc-button label=\"Send Invitation\" @click=${this._sendInvitation}>\n//             <mwc-icon slot=\"icon\">send</mwc-icon>\n//           </mwc-button>\n//         </div>\n//       </mwc-card>\n//     `;\n//   }\n\n//   getScopedElements() {\n//     return {\n//       'mwc-circular-progress': CircularProgress,\n//       'mwc-icon': Icon,\n//       'mwc-list': List,\n//       'mwc-card': Card,\n//       'mwc-list-item': ListItem,\n//       'mwc-button': Button,\n//       'search-agent': connectDeps(SearchAgent, this._deps.profilesStore),\n//     };\n//   }\n// }\n"]}