{"version":3,"file":"store-subscriber.js","sourceRoot":"","sources":["../src/store-subscriber.ts"],"names":[],"mappings":"AAAA,OAAO,EAA0B,GAAG,EAAE,MAAM,cAAc,CAAC;AAG3D;;GAEG;AACH,MAAM,OAAO,eAAe;IAO1B,YACY,IAAqB,EACrB,QAA2B;QAD3B,SAAI,GAAJ,IAAI,CAAiB;QACrB,aAAQ,GAAR,QAAQ,CAAmB;QAErC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;SAC/B;IACH,CAAC;IAED,iBAAiB,CAAC,KAAkB;QAClC,IAAI,KAAK,KAAK,IAAI,CAAC,cAAc;YAAE,OAAO,KAAK,CAAC;QAChD,IAAI,KAAK,IAAI,IAAI,CAAC,cAAc,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK;YAAE,OAAO,KAAK,CAAC;QAC5E,OAAO,IAAI,CAAC;IACd,CAAC;IAED,WAAW;QACT,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAE9B,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;YACjC,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;oBAC5C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;gBAC5B,CAAC,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;SAC7B;IACH,CAAC;CACF","sourcesContent":["import { Readable, Unsubscriber, get } from \"svelte/store\";\nimport { ReactiveController, ReactiveElement } from \"lit\";\n\n/**\n * Tracks a changing store, derived at each update\n */\nexport class StoreSubscriber<V> implements ReactiveController {\n  value!: V;\n\n  public _unsubscribe: Unsubscriber | undefined;\n\n  private _previousStore: Readable<V> | undefined;\n\n  constructor(\n    protected host: ReactiveElement,\n    protected getStore: () => Readable<V>\n  ) {\n    host.addController(this);\n  }\n\n  hostUpdate() {\n    this.resubscribe();\n  }\n\n  hostDisconnected() {\n    this.unsubscribe();\n  }\n\n  unsubscribe() {\n    if (this._unsubscribe) {\n      this._unsubscribe();\n      this._unsubscribe = undefined;\n    }\n  }\n\n  shouldResubscribe(store: Readable<V>) {\n    if (store === this._previousStore) return false;\n    if (store && this._previousStore && get(store) === this.value) return false;\n    return true;\n  }\n\n  resubscribe() {\n    const store = this.getStore();\n\n    if (this.shouldResubscribe(store)) {\n      this.unsubscribe();\n\n      if (store) {\n        this._unsubscribe = store.subscribe((value) => {\n          this.value = value;\n          this.host.requestUpdate();\n        });\n      }\n      this._previousStore = store;\n    }\n  }\n}\n"]}