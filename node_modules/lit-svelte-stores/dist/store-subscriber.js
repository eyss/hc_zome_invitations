import { get } from "svelte/store";
/**
 * Tracks a changing store, derived at each update
 */
export class StoreSubscriber {
    constructor(host, getStore) {
        this.host = host;
        this.getStore = getStore;
        host.addController(this);
    }
    hostUpdate() {
        this.resubscribe();
    }
    hostDisconnected() {
        this.unsubscribe();
    }
    unsubscribe() {
        if (this._unsubscribe) {
            this._unsubscribe();
            this._unsubscribe = undefined;
        }
    }
    shouldResubscribe(store) {
        if (store === this._previousStore)
            return false;
        if (store && this._previousStore && get(store) === this.value)
            return false;
        return true;
    }
    resubscribe() {
        const store = this.getStore();
        if (this.shouldResubscribe(store)) {
            this.unsubscribe();
            if (store) {
                this._unsubscribe = store.subscribe((value) => {
                    this.value = value;
                    this.host.requestUpdate();
                });
            }
            this._previousStore = store;
        }
    }
}
//# sourceMappingURL=store-subscriber.js.map